{
    "name": "vlocode",
    "displayName": "Salesforce Vlocity Integration",
    "description": "Salesforce and Vlocity development and deployment extension for VSCode",
    "version": "0.16.17",
    "license": "MIT",
    "icon": "resources/icon.png",
    "author": {
        "name": "Peter van Gulik",
        "email": "peter@curlybracket.nl"
    },
    "publisher": "curlybracket",
    "engines": {
        "vscode": "^1.61.0"
    },
    "homepage": "https://github.com/Codeneos/vlocode#readme",
    "categories": [
        "Other"
    ],
    "keywords": [
        "salesforce",
        "vlocity"
    ],
    "repository": "https://github.com/codeneos/vlocode.git",
    "bugs": {
        "url": "https://github.com/Codeneos/vlocode/issues",
        "email": "peter@curlybracket.nl"
    },
    "badges": [
        {
            "description": "CI Build Status",
            "url": "https://circleci.com/gh/Codeneos/vlocode/tree/master.svg?style=svg",
            "href": "https://circleci.com/gh/Codeneos/vlocode/tree/master"
        },
        {
            "description": "Written in Typescript",
            "url": "https://img.shields.io/github/languages/top/codeneos/vlocode.svg?logo=github",
            "href": "https://github.com/Codeneos/vlocode"
        },
        {
            "description": "Releases and version history",
            "url": "https://badgen.net/github/release/Codeneos/vlocode/stable",
            "href": "https://github.com/Codeneos/vlocode/releases"
        },
        {
            "description": "Downloads",
            "url": "https://badgen.net/vs-marketplace/d/curlybracket.vlocode",
            "href": "https://marketplace.visualstudio.com/items?itemName=curlybracket.vlocode"
        },
        {
            "description": "Rating",
            "url": "https://vsmarketplacebadge.apphb.com/rating-star/curlybracket.vlocode.svg",
            "href": "https://marketplace.visualstudio.com/items?itemName=curlybracket.vlocode"
        },
        {
            "description": "Bugs",
            "url": "https://img.shields.io/sonar/https/sonarcloud.io/curlybracket.vlocode/bugs.svg?color=lightgray&label=bugs&logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAolBMVEUAAAD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgCXdjhZAAAANXRSTlMA%2Bg335ykFAwnr7hDZON7Ie1ZDMfTUmIUUSSLPoVAa4r6K8rtyXD62gG2xpsKSjnZpYx6qTp5XIo8AAAOWSURBVFjD7VbZtqIwEGSVRXYQAVFBFvf16v%2F%2F2tgJKsYEvPM4Z%2FLiwV7SXV2phPu3lyB71fnserLwN9HD%2BGBL4u2%2BRMk%2BeMJvw887CH6uIKuGvwhXvIK%2FEYtf1sq38epRu1GWtFa%2FLH%2FPNxFFvq6q9aGQ8LeYC19hH2L30VFWm4p8Z4Tb2H%2BRYbBC%2B2urWfvfy1hHGZx%2BHNwFeBox4alMDfhfv%2FbFJxNUvvlpqVEGe9aTYAxe85pmihGWTne8bEGnJ7qx5KG5pDNBCZssBcZ8M7CeOkcILuKUCTAP6bvo5GuAE5P1ESAsyR0JKqhxzLYfACG3ZwY8dMDsoWcOKXDFZ9tNYFnYQeMNkPh09fzZgD5loMKWfYxrREOeF3VjU%2FqUHMn8bp8w5Elwl4tba2nbTwWRNSRPBUWeFHMjkgqirckMXuPDFx5hUtcSGU4b%2BemV3BHeSHpoUut2uirL8XYSwNfCJEDetjQyjFrtNyJmjE3cnBJ54b3dgmhVBgytfIRTpENChPQ8aYNSHxzy4DkoTrmMseju1XcRmg64L866eL0nj1ER4rkZ7oghQuScgadNWz5ijIVBzlkiRCDoQKOB25Dagqhw8ECGP%2FXGHwOEwKPvCj4184HMpk%2Fwo72IGpWfzEEjze8WGwqL%2BwrIMbNafrUO52LGefCb9RUwtFG82ybvBnaecsd%2BrQYEfgD0d6lZ4x6gFdGj3%2FLDV2H%2B0tr4FHVZcjaUllDnvppk8etrRqrxzAJUOQNIGLEEcHTpwAVpNIfSRCyFDcwOZu6ACbgC6o25Quj0VrAjhINAuWInuGAMUtiHyqMp333L1AFQmCuZbr7WSTHMoBVngpsd0UCCCetm50W88DihgB5c5mNjz0oQB3hnjNWOVoKpA8Amo4Dl4wwkBupFoR4AgGnIfq7M5ScYOq0JD9jO5wPmgwmDH%2B2Qpk0%2FKyjxa32lfsYjRZtcmo0kfJERE4vyoHnihgRT1TOK0J97ngLk92MOWk5XKKxZtiu0CvNTXNlReQmu2FzIbgLlKoJ8XuLtdQ0XUZxkAfzVyzSV8N02Vtvd6s2NN8%2FSMNzaEo%2B%2F525sPG5a%2BycM08xqLAtHfX8Kj26UlZmgRTzFYlTkbJK9RjrNHUSvYWmQFj2UKbQxQ6u1Fz8ay8ojuTMR24nTekAX0aQKd5am65KRHaZvo4vivDAkfaFZdnhOKOEt7ZR9XwYBJZeKLJf7LP4vYv0BK5jBy9A2z3IAAAAASUVORK5CYII%3D",
            "href": "https://sonarcloud.io/dashboard?id=curlybracket.vlocode"
        },
        {
            "description": "Vulnerabilities",
            "url": "https://img.shields.io/sonar/https/sonarcloud.io/curlybracket.vlocode/vulnerabilities.svg?label=vulnerabilities&logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAolBMVEUAAAD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgCXdjhZAAAANXRSTlMA%2Bg335ykFAwnr7hDZON7Ie1ZDMfTUmIUUSSLPoVAa4r6K8rtyXD62gG2xpsKSjnZpYx6qTp5XIo8AAAOWSURBVFjD7VbZtqIwEGSVRXYQAVFBFvf16v%2F%2F2tgJKsYEvPM4Z%2FLiwV7SXV2phPu3lyB71fnserLwN9HD%2BGBL4u2%2BRMk%2BeMJvw887CH6uIKuGvwhXvIK%2FEYtf1sq38epRu1GWtFa%2FLH%2FPNxFFvq6q9aGQ8LeYC19hH2L30VFWm4p8Z4Tb2H%2BRYbBC%2B2urWfvfy1hHGZx%2BHNwFeBox4alMDfhfv%2FbFJxNUvvlpqVEGe9aTYAxe85pmihGWTne8bEGnJ7qx5KG5pDNBCZssBcZ8M7CeOkcILuKUCTAP6bvo5GuAE5P1ESAsyR0JKqhxzLYfACG3ZwY8dMDsoWcOKXDFZ9tNYFnYQeMNkPh09fzZgD5loMKWfYxrREOeF3VjU%2FqUHMn8bp8w5Elwl4tba2nbTwWRNSRPBUWeFHMjkgqirckMXuPDFx5hUtcSGU4b%2BemV3BHeSHpoUut2uirL8XYSwNfCJEDetjQyjFrtNyJmjE3cnBJ54b3dgmhVBgytfIRTpENChPQ8aYNSHxzy4DkoTrmMseju1XcRmg64L866eL0nj1ER4rkZ7oghQuScgadNWz5ijIVBzlkiRCDoQKOB25Dagqhw8ECGP%2FXGHwOEwKPvCj4184HMpk%2Fwo72IGpWfzEEjze8WGwqL%2BwrIMbNafrUO52LGefCb9RUwtFG82ybvBnaecsd%2BrQYEfgD0d6lZ4x6gFdGj3%2FLDV2H%2B0tr4FHVZcjaUllDnvppk8etrRqrxzAJUOQNIGLEEcHTpwAVpNIfSRCyFDcwOZu6ACbgC6o25Quj0VrAjhINAuWInuGAMUtiHyqMp333L1AFQmCuZbr7WSTHMoBVngpsd0UCCCetm50W88DihgB5c5mNjz0oQB3hnjNWOVoKpA8Amo4Dl4wwkBupFoR4AgGnIfq7M5ScYOq0JD9jO5wPmgwmDH%2B2Qpk0%2FKyjxa32lfsYjRZtcmo0kfJERE4vyoHnihgRT1TOK0J97ngLk92MOWk5XKKxZtiu0CvNTXNlReQmu2FzIbgLlKoJ8XuLtdQ0XUZxkAfzVyzSV8N02Vtvd6s2NN8%2FSMNzaEo%2B%2F525sPG5a%2BycM08xqLAtHfX8Kj26UlZmgRTzFYlTkbJK9RjrNHUSvYWmQFj2UKbQxQ6u1Fz8ay8ojuTMR24nTekAX0aQKd5am65KRHaZvo4vivDAkfaFZdnhOKOEt7ZR9XwYBJZeKLJf7LP4vYv0BK5jBy9A2z3IAAAAASUVORK5CYII%3D",
            "href": "https://sonarcloud.io/dashboard?id=curlybracket.vlocode"
        }
    ],
    "activationEvents": [
        "onView:datapackExplorer",
        "onView:jobExplorer",
        "onView:developerLogsView",
        "workspaceContains:**/*_datapack.json",
        "workspaceContains:**/*_DataPack.json",
        "workspaceContains:**/.vlocode",
        "workspaceContains:**/*.cls",
        "onCommand:vlocode.selectOrg",
        "onCommand:vlocode.refreshDatapack",
        "onCommand:vlocode.deployDatapack",
        "onCommand:vlocode.openSalesforce",
        "onCommand:vlocode.renameDatapack",
        "onCommand:vlocode.cloneDatapack",
        "onCommand:vlocode.exportDatapack",
        "onCommand:vlocode.buildParentKeyFiles",
        "onCommand:vlocode.buildDatapack",
        "onCommand:vlocode.viewDatapack.generic",
        "onCommand:vlocode.adminCommands",
        "onCommand:vlocode.admin.refreshPriceBook",
        "onCommand:vlocode.admin.refreshProductHierarchy",
        "onCommand:vlocode.admin.refreshPriceBookAndProductHierarchy",
        "onCommand:vlocode.admin.updateAllProdAttribCommand",
        "onCommand:vlocode.admin.clearPlatformCache",
        "onCommand:vlocode.deployMetadata",
        "onCommand:vlocode.refreshMetadata",
        "onCommand:vlocode.destroyMetadata",
        "onCommand:vlocode.selectApiVersion",
        "onCommand:vlocode.createMetadataCommand",
        "onCommand:vlocode.execAnonymousCommand",
        "onCommand:vlocode.viewInSalesforce",
        "onCommand:vlocode.createLwc",
        "onCommand:vlocode.createApexClass",
        "onCommand:vlocode.datapackExplorer.export",
        "onCommand:vlocode.datapackExplorer.refresh",
        "onCommand:vlocode.datapackExplorer.openSalesforce",
        "onCommand:vlocode.jobExplorer.refresh",
        "onCommand:vlocode.jobExplorer.run",
        "onCommand:vlocode.clearDeveloperLogs",
        "onCommand:vlocode.setTraceFlags",
        "onCommand:vlocode.developerLogs.setLogLevel",
        "onCommand:vlocode.developerLogs.deleteAll",
        "onCommand:vlocode.developerLogs.refresh",
        "onCommand:vlocode.setLogVisibility",
        "onCommand:vlocode.developerLogs.setLogVisibility",
        "onCommand:vlocode.execRestApi",
        "onCommand:vlocode.retrieveMetadata",
        "onCommand:vlocode.pauseDeploymentQueue",
        "onCommand:vlocode.resumeDeploymentQueue",
        "onCommand:vlocode.clearDeploymentQueue",
        "onCommand:vlocode.addToProfile",
        "onCommand:vlocode.removeFromProfile"
    ],
    "main": "./out/vlocode",
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "vlocode-vlocity",
                    "title": "Vlocity",
                    "icon": "resources/datapacks.svg"
                }
            ],
            "panel": [
                {
                    "id": "vlocode-developerlogs",
                    "title": "Salesforce Logs",
                    "icon": "resources/datapacks.svg"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "datapackExplorer",
                "when": "vlocode.orgSelected != true",
                "contents": "Select an Salesforce instance to start exploring datapacks.\n[Select Salesforce org](command:vlocode.selectOrg)"
            }
        ],
        "views": {
            "vlocode-vlocity": [
                {
                    "id": "datapackExplorer",
                    "name": "Datapacks"
                },
                {
                    "id": "activityView",
                    "when": "vlocode.orgSelected == true",
                    "name": "Activity"
                },
                {
                    "id": "jobExplorer",
                    "when": "vlocode.orgSelected == true",
                    "name": "Jobs"
                }
            ],
            "vlocode-developerlogs": [
                {
                    "id": "developerLogsView",
                    "name": "Salesforce Logs",
                    "when": "vlocodeSalesforceSupport && vlocodeSalesforceDeveloperLogs && vlocode.orgSelected",
                    "contextualTitle": ""
                }
            ]
        },
        "commands": [
            {
                "command": "vlocode.selectOrg",
                "title": "Vlocity: Select Salesforce Org"
            },
            {
                "command": "vlocode.refreshDatapack",
                "title": "Vlocity: Refresh Datapack from Org"
            },
            {
                "command": "vlocode.deployDatapack",
                "title": "Vlocity: Deploy Datapack to Org"
            },
            {
                "command": "vlocode.openSalesforce",
                "title": "Vlocity: Open in Org"
            },
            {
                "command": "vlocode.renameDatapack",
                "title": "Vlocity: Rename Datapack"
            },
            {
                "command": "vlocode.cloneDatapack",
                "title": "Vlocity: Clone Datapack"
            },
            {
                "command": "vlocode.exportDatapack",
                "title": "Vlocity: Export Datapack from Org"
            },
            {
                "command": "vlocode.buildParentKeyFiles",
                "title": "Vlocity: Repair Datapack dependencies"
            },
            {
                "command": "vlocode.buildDatapack",
                "title": "Vlocity: Build Datapack"
            },
            {
                "command": "vlocode.viewDatapack.generic",
                "title": "Vlocity: View Datapack"
            },
            {
                "command": "vlocode.adminCommands",
                "title": "Vlocity: Administration Console"
            },
            {
                "command": "vlocode.admin.refreshPriceBook",
                "title": "Vlocity: Refresh Pricebook"
            },
            {
                "command": "vlocode.admin.refreshProductHierarchy",
                "title": "Vlocity: Refresh Product Hierarchy"
            },
            {
                "command": "vlocode.admin.refreshPriceBookAndProductHierarchy",
                "title": "Vlocity: Refresh Pricebook and Product Hierarchy"
            },
            {
                "command": "vlocode.admin.updateAllProdAttribCommand",
                "title": "Vlocity: Update Product Attributes"
            },
            {
                "command": "vlocode.admin.clearPlatformCache",
                "title": "Vlocity: Clear Platform Cache"
            },
            {
                "command": "vlocode.deployMetadata",
                "title": "Salesforce: Deploy to Org"
            },
            {
                "command": "vlocode.refreshMetadata",
                "title": "Salesforce: Refresh from Org"
            },
            {
                "command": "vlocode.destroyMetadata",
                "title": "Salesforce: Delete from Org"
            },
            {
                "command": "vlocode.selectApiVersion",
                "title": "Salesforce: Select API Version"
            },
            {
                "command": "vlocode.createMetadataCommand",
                "title": "Salesforce: New component"
            },
            {
                "command": "vlocode.execAnonymousCommand",
                "title": "Salesforce: Execute Anonymous APEX"
            },
            {
                "command": "vlocode.viewInSalesforce",
                "title": "Salesforce: Open in Org"
            },
            {
                "command": "vlocode.createLwc",
                "title": "Salesforce: New Lightning Web Component (LWC)"
            },
            {
                "command": "vlocode.createApexClass",
                "title": "Salesforce: New APEX class"
            },
            {
                "command": "vlocode.clearDeveloperLogs",
                "title": "Salesforce: Clear Developer Logs"
            },
            {
                "command": "vlocode.setTraceFlags",
                "title": "Salesforce: Set Debug Log Level"
            },
            {
                "command": "vlocode.setLogVisibility",
                "title": "Salesforce: Set Developer Log Visibility"
            },
            {
                "command": "vlocode.execRestApi",
                "title": "Salesforce: Execute REST API"
            },
            {
                "command": "vlocode.retrieveMetadata",
                "title": "Salesforce: Export/Retrieve metadata from Org"
            },
            {
                "command": "vlocode.pauseDeploymentQueue",
                "title": "Salesforce: Pause deployments"
            },
            {
                "command": "vlocode.resumeDeploymentQueue",
                "title": "Salesforce: Resume deployments"
            },
            {
                "command": "vlocode.clearDeploymentQueue",
                "title": "Salesforce: Clear pending deployment queue"
            },
            {
                "command": "vlocode.addToProfile",
                "title": "Salesforce: Add to profiles"
            },
            {
                "command": "vlocode.removeFromProfile",
                "title": "Salesforce: Remove from profiles"
            },
            {
                "command": "vlocode.datapackExplorer.export",
                "title": "Export",
                "icon": {
                    "light": "resources/light/export.svg",
                    "dark": "resources/dark/export.svg"
                }
            },
            {
                "command": "vlocode.datapackExplorer.refresh",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "vlocode.datapackExplorer.openSalesforce",
                "title": "Open in Salesforce",
                "icon": {
                    "light": "resources/light/link-external.svg",
                    "dark": "resources/dark/link-external.svg"
                }
            },
            {
                "command": "vlocode.jobExplorer.refresh",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "vlocode.jobExplorer.run",
                "title": "Run job",
                "icon": {
                    "light": "resources/light/start.svg",
                    "dark": "resources/dark/start.svg"
                }
            },
            {
                "command": "vlocode.developerLogs.setLogLevel",
                "title": "Set log level",
                "icon": {
                    "light": "resources/light/settings.svg",
                    "dark": "resources/dark/settings.svg"
                }
            },
            {
                "command": "vlocode.developerLogs.deleteAll",
                "title": "Delete all logs",
                "icon": {
                    "light": "resources/light/trash.svg",
                    "dark": "resources/dark/trash.svg"
                }
            },
            {
                "command": "vlocode.developerLogs.refresh",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "vlocode.developerLogs.setLogVisibility",
                "title": "Log Visibility (own/all)",
                "icon": {
                    "light": "resources/light/visibility.svg",
                    "dark": "resources/dark/visibility.svg"
                }
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "vlocode.selectOrg",
                    "group": "v_vlocity"
                },
                {
                    "command": "vlocode.refreshDatapack",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.deployDatapack",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.openSalesforce",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.renameDatapack",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.cloneDatapack",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.exportDatapack",
                    "group": "v_vlocity"
                },
                {
                    "command": "vlocode.buildParentKeyFiles",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.buildDatapack",
                    "group": "v_vlocity",
                    "when": "false"
                },
                {
                    "command": "vlocode.viewDatapack.generic",
                    "group": "v_vlocity",
                    "when": "false"
                },
                {
                    "command": "vlocode.adminCommands",
                    "group": "v_vlocity"
                },
                {
                    "command": "vlocode.admin.refreshPriceBook",
                    "group": "v_vlocity"
                },
                {
                    "command": "vlocode.admin.refreshProductHierarchy",
                    "group": "v_vlocity"
                },
                {
                    "command": "vlocode.admin.refreshPriceBookAndProductHierarchy",
                    "group": "v_vlocity"
                },
                {
                    "command": "vlocode.admin.updateAllProdAttribCommand",
                    "group": "v_vlocity"
                },
                {
                    "command": "vlocode.admin.clearPlatformCache",
                    "group": "v_vlocity"
                },
                {
                    "command": "vlocode.deployMetadata",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.refreshMetadata",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.destroyMetadata",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.selectApiVersion",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.createMetadataCommand",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.execAnonymousCommand",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.viewInSalesforce",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.createLwc",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.createApexClass",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.clearDeveloperLogs",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.setTraceFlags",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.setLogVisibility",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.execRestApi",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.retrieveMetadata",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.pauseDeploymentQueue",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.resumeDeploymentQueue",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.clearDeploymentQueue",
                    "group": "v_salesforce",
                    "when": "config.vlocity.salesforce.enabled"
                },
                {
                    "command": "vlocode.addToProfile",
                    "group": "v_salesforce_profile"
                },
                {
                    "command": "vlocode.removeFromProfile",
                    "group": "v_salesforce_profile"
                },
                {
                    "command": "vlocode.datapackExplorer.export",
                    "when": "false"
                },
                {
                    "command": "vlocode.datapackExplorer.refresh",
                    "when": "false"
                },
                {
                    "command": "vlocode.datapackExplorer.openSalesforce",
                    "when": "false"
                },
                {
                    "command": "vlocode.jobExplorer.refresh",
                    "when": "false"
                },
                {
                    "command": "vlocode.jobExplorer.run",
                    "when": "false"
                },
                {
                    "command": "vlocode.developerLogs.setLogLevel",
                    "when": "false"
                },
                {
                    "command": "vlocode.developerLogs.deleteAll",
                    "when": "false"
                },
                {
                    "command": "vlocode.developerLogs.refresh",
                    "when": "false"
                },
                {
                    "command": "vlocode.developerLogs.setLogVisibility",
                    "when": "false"
                }
            ],
            "explorer/context": [
                {
                    "command": "vlocode.refreshDatapack",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.deployDatapack",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.openSalesforce",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.renameDatapack",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.cloneDatapack",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.deployMetadata",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.refreshMetadata",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.destroyMetadata",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.viewInSalesforce",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.addToProfile",
                    "group": "v_salesforce_profile",
                    "when": "config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && resourceScheme == file && resourceFilename =~ /(\\.object|\\.field-meta\\.xml|\\.cls|\\.cls-meta\\.xml)$/"
                },
                {
                    "command": "vlocode.addToProfile",
                    "group": "v_salesforce_profile",
                    "when": "config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && explorerResourceIsFolder && resourceDirname =~ /(objects|classes)/"
                },
                {
                    "command": "vlocode.removeFromProfile",
                    "group": "v_salesforce_profile",
                    "when": "config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && resourceScheme == file && resourceFilename =~ /(\\.object|\\.field-meta\\.xml|\\.cls|\\.cls-meta\\.xml)$/"
                },
                {
                    "command": "vlocode.removeFromProfile",
                    "group": "v_salesforce_profile",
                    "when": "config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && explorerResourceIsFolder && resourceDirname =~ /(objects|classes)/"
                }
            ],
            "editor/context": [
                {
                    "command": "vlocode.refreshDatapack",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.deployDatapack",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.openSalesforce",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.cloneDatapack",
                    "group": "v_vlocity",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"
                },
                {
                    "command": "vlocode.deployMetadata",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.refreshMetadata",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.destroyMetadata",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.viewInSalesforce",
                    "group": "v_salesforce",
                    "when": "vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"
                },
                {
                    "command": "vlocode.addToProfile",
                    "group": "v_salesforce_profile",
                    "when": "config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && resourceScheme == file && resourceFilename =~ /(\\.object|\\.field-meta\\.xml|\\.cls|\\.cls-meta\\.xml)$/"
                },
                {
                    "command": "vlocode.removeFromProfile",
                    "group": "v_salesforce_profile",
                    "when": "config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && resourceScheme == file && resourceFilename =~ /(\\.object|\\.field-meta\\.xml|\\.cls|\\.cls-meta\\.xml)$/"
                }
            ],
            "view/item/context": [
                {
                    "command": "vlocode.datapackExplorer.export",
                    "group": "inline",
                    "when": "viewItem == vlocode:datapack:object"
                },
                {
                    "command": "vlocode.datapackExplorer.export",
                    "group": "inline",
                    "when": "viewItem == vlocode:datapack:category"
                },
                {
                    "command": "vlocode.datapackExplorer.export",
                    "group": "inline",
                    "when": "viewItem == vlocode:datapack:sobject"
                },
                {
                    "command": "vlocode.datapackExplorer.export",
                    "group": "inline",
                    "when": "viewItem == vlocode:datapack:sobjectType"
                },
                {
                    "command": "vlocode.datapackExplorer.export",
                    "group": "v_vlocity",
                    "when": "viewItem == vlocode:datapack:object"
                },
                {
                    "command": "vlocode.datapackExplorer.export",
                    "group": "v_vlocity",
                    "when": "viewItem == vlocode:datapack:category"
                },
                {
                    "command": "vlocode.datapackExplorer.export",
                    "group": "v_vlocity",
                    "when": "viewItem == vlocode:datapack:sobject"
                },
                {
                    "command": "vlocode.datapackExplorer.export",
                    "group": "v_vlocity",
                    "when": "viewItem == vlocode:datapack:sobjectType"
                },
                {
                    "command": "vlocode.datapackExplorer.openSalesforce",
                    "group": "inline",
                    "when": "viewItem == vlocode:datapack:object"
                },
                {
                    "command": "vlocode.datapackExplorer.openSalesforce",
                    "group": "inline",
                    "when": "viewItem == vlocode:datapack:sobject"
                },
                {
                    "command": "vlocode.datapackExplorer.openSalesforce",
                    "group": "v_vlocity",
                    "when": "viewItem == vlocode:datapack:object"
                },
                {
                    "command": "vlocode.datapackExplorer.openSalesforce",
                    "group": "v_vlocity",
                    "when": "viewItem == vlocode:datapack:sobject"
                },
                {
                    "command": "vlocode.jobExplorer.run",
                    "group": "inline",
                    "when": "viewItem == vlocode:jobYaml"
                }
            ],
            "view/title": [
                {
                    "command": "vlocode.datapackExplorer.refresh",
                    "group": "navigation",
                    "when": "view == datapackExplorer"
                },
                {
                    "command": "vlocode.jobExplorer.refresh",
                    "group": "navigation",
                    "when": "view == jobExplorer"
                },
                {
                    "command": "vlocode.developerLogs.setLogLevel",
                    "group": "navigation",
                    "when": "view == developerLogsView"
                },
                {
                    "command": "vlocode.developerLogs.deleteAll",
                    "group": "navigation",
                    "when": "view == developerLogsView"
                },
                {
                    "command": "vlocode.developerLogs.refresh",
                    "group": "navigation",
                    "when": "view == developerLogsView"
                },
                {
                    "command": "vlocode.developerLogs.setLogVisibility",
                    "group": "navigation",
                    "when": "view == developerLogsView"
                }
            ]
        },
        "configuration": [
            {
                "type": "object",
                "title": "General",
                "properties": {
                    "vlocity.sfdxUsername": {
                        "type": "string",
                        "scope": "machine-overridable",
                        "markdownDescription": "SFDX username; when this is specified the username, password, loginUrl and instanceUrl are ignored."
                    },
                    "vlocity.httpProxy": {
                        "type": "string",
                        "description": "Optional HTTP proxy for connecting to Salesforce"
                    },
                    "vlocity.logLevel": {
                        "type": "string",
                        "default": "info",
                        "enum": [
                            "info",
                            "verbose",
                            "debug"
                        ],
                        "markdownDescription": "Determines the amount of details printed to the integrated terminal for Vlocode"
                    },
                    "vlocity.logInTerminal": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Enable logging in `TERMINAL` tab instead of in the `OUTPUT` tab, terminal logging uses a vscode *Pseudoterminal* and has support for colors but might not work correctly on all platforms.\n\n**Note** Changing this will require you to restart for the changes to be applied."
                    },
                    "vlocity.conditionalContextMenus": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "When enabled context menu options on the workspace-explorer and editor are displayed only when applicable; when enabled Vlocode monitors your workspace folders and keeps track of a list of files which are either Salesforce metadata of Vlocity datapacks. If you disabled this both Vlocity and Salesforce context menu options will always be visible. __Note: if you don't see any context menu options disable this.__"
                    }
                }
            },
            {
                "type": "object",
                "title": "Vlocity",
                "properties": {
                    "vlocity.projectPath": {
                        "type": "string",
                        "scope": "machine-overridable",
                        "markdownDescription": "Path to the folder containing the Vlocity datapacks relative to the workspace root folder, for example:\n - `./vlocity`\n - `./datapacks`"
                    },
                    "vlocity.customJobOptionsYaml": {
                        "type": "string",
                        "scope": "machine-overridable",
                        "markdownDescription": "Path to the custom YAML that is used during deployment and export, see the official Vlocity Build repository for [documentation](https://github.com/vlocityinc/vlocity_build#additional-command-line-options) on the format of this file.\n\n> **Note** most of the job options are controlled by Vlocode therefore only the **`preStepApex`**, **`postStepApex`** and **`OverrideSettings`** settings will be used from specified YAML file."
                    },
                    "vlocity.deployOnSave": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Automatically deploy datapacks to Salesforce when changes are saved."
                    },
                    "vlocity.compileOnBuild": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Compile SCSS source before deploying to the target org."
                    },
                    "vlocity.autoActivate": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Automatically activate datapacks after deployment to the target org."
                    },
                    "vlocity.parallelLimit": {
                        "type": "number",
                        "default": 50,
                        "markdownDescription": "The number of parallel exports to run when exporting or refreshing Vlocity datapacks"
                    },
                    "vlocity.deploymentMode": {
                        "type": "string",
                        "enum": [
                            "compatibility",
                            "direct"
                        ],
                        "default": "compatibility",
                        "enumDescriptions": [
                            "Use Vlocity Deployment library; maximizes compatibility at the cost of deployment speed",
                            "Directly load records using bulk or collections API; significantly faster then but still beta"
                        ],
                        "markdownDescription": "Change how Datapacks are deployment by Vlocode; select _direct_ mode for faster deployments (currently this is a beta feature)"
                    },
                    "vlocity.deploy.chunkSize": {
                        "type": "number",
                        "default": 100,
                        "markdownDescription": "Number of records to deploy in as single operation using the collection API, only affects deployments when *direct* mode is enabled"
                    },
                    "vlocity.deploy.bulkApiThreshold": {
                        "type": "number",
                        "default": 500,
                        "markdownDescription": "Record count when to start using the bulk API only has effect when `vlocity.deploy.useBulkApi` is set to true `true`"
                    },
                    "vlocity.deploy.useBulkApi": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "When enabled the deployment process will use the bulk API for uploading records when the total record type for a single SObject surpassed the value configured as `bulkApiThreshold`"
                    }
                }
            },
            {
                "type": "object",
                "title": "Salesforce",
                "properties": {
                    "vlocity.salesforce.enabled": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Enables support for **Salesforce commands** such as _Deploy_ and _Refresh_ of Salesforce Metadata Objects through Vlocode"
                    },
                    "vlocity.salesforce.apiVersion": {
                        "type": "string",
                        "pattern": "^\\d{2,3}\\.\\d$",
                        "examples": [
                            "48.0",
                            "49.0",
                            "50.0",
                            "51.0"
                        ],
                        "default": "51.0",
                        "markdownDescription": "The API version used for Salesforce deployments and refresh operations. Invalid API versions will cause all Salesforce related commands to fail."
                    },
                    "vlocity.salesforce.deployOnSave": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Automatically deploy metadata files to Salesforce when saved."
                    },
                    "vlocity.salesforce.profileActionsInContextMenu": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Display add __and to profiles__ and __remove from profiles__ commands in the editor and explorer context menu. If unchecked profile actions are only available from the command pallet."
                    },
                    "vlocity.salesforce.manageMetaXmlFiles": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Enables auto renaming and creation of _-meta.xml_ files for APEX classes. _Note: only has effect when **vlocity.salesforce.enabled** is enabled_"
                    },
                    "vlocity.salesforce.exportFolder": {
                        "type": "string",
                        "default": "./src",
                        "markdownDescription": "Folder to which Vlocode export Salesforce metadata"
                    },
                    "vlocity.salesforce.exportFormat": {
                        "type": "string",
                        "enum": [
                            "classic",
                            "sfdx"
                        ],
                        "default": "classic",
                        "enumDescriptions": [
                            "Export Salesforce Metadata in **classic metadata** format without decomposing metadata and adding additional -meta.xml suffixes as retrieved from Salesforce through the metadata API.",
                            "Export Salesforce Metadata in **decomposed SFDX** format without. Decomposes metadata in multiple files and adds additional -meta.xml all exported metadata without content."
                        ],
                        "markdownDescription": "Folder to which Vlocode export Salesforce metadata"
                    }
                }
            },
            {
                "type": "object",
                "title": "Salesforce Developer Logs",
                "properties": {
                    "vlocity.salesforce.developerLogsVisible": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Show the Salesforce developer logs panel"
                    },
                    "vlocity.salesforce.developerLogsVisibility": {
                        "type": "string",
                        "enum": [
                            "self",
                            "all"
                        ],
                        "default": "self",
                        "enumDescriptions": [
                            "Display only the logs generated by the currently connected user",
                            "Display all developer logs on the connected org from all users with active trace flags"
                        ],
                        "markdownDescription": "Change which logs are displayed and visible in the Developer logs panel"
                    },
                    "vlocity.salesforce.developerLogsAutoRefresh": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Auto refresh the Salesforce logs panel when the panel is visible \n\n> **Note** This setting only has effect for Developer instances; for production instances the logs panel needs to be refreshed manually"
                    }
                }
            }
        ],
        "grammars": [
            {
                "language": "vldp",
                "scopeName": "source.json",
                "path": "./syntax/datapack.tmLanguage.json"
            }
        ],
        "languages": [
            {
                "id": "vldp",
                "aliases": [
                    "Vlocity Datapack"
                ],
                "extensions": [],
                "filenamePatterns": [
                    "*_DataPack.json",
                    "*_ParentKeys.json"
                ],
                "configuration": "./syntax/datapack-language.json"
            },
            {
                "id": "xml",
                "extensions": [
                    ".accountForecastSetting",
                    ".accountRelationshipShareRule",
                    ".acctMgrTargetSetting",
                    ".actionLinkGroupTemplate",
                    ".aiAssistantTemplate",
                    ".animationRule",
                    ".app",
                    ".appMenu",
                    ".approvalProcess",
                    ".apt",
                    ".assignmentRules",
                    ".assistantRecommendationType",
                    ".authprovider",
                    ".autoResponseRules",
                    ".batchCalcJobDefinition",
                    ".batchProcessJobDefinition",
                    ".benefitAction",
                    ".bot",
                    ".brandingSet",
                    ".briefcaseDefinition",
                    ".businessProcessFeedbackConfiguration",
                    ".businessProcessGroup",
                    ".cachePartition",
                    ".callCenter",
                    ".campaignInfluenceModel",
                    ".Canvas",
                    ".careProviderSearchConfig",
                    ".careSystemFieldMapping",
                    ".CaseSubjectParticle",
                    ".channelLayout",
                    ".ChannelObjectLinkingRule",
                    ".ChatterExtension",
                    ".cleanDataService",
                    ".commandaction",
                    ".community",
                    ".communityTemplateDefinition",
                    ".communityThemeDefinition",
                    ".config",
                    ".connectedApp",
                    ".ConversationVendorFieldDefinition",
                    ".ConversationVendorInformation",
                    ".corsWhitelistOrigin",
                    ".cspTrustedSite",
                    ".customApplicationComponent",
                    ".customExperience",
                    ".customHelpMenuSection",
                    ".customPermission",
                    ".dashboard",
                    ".datacategorygroup",
                    ".dataSource",
                    ".dataSourceObject",
                    ".dataStreamDefinition",
                    ".datatype",
                    ".decisionTable",
                    ".decisionTableDatasetLink",
                    ".delegateGroup",
                    ".delivery",
                    ".deployment",
                    ".documentType",
                    ".duplicateRule",
                    ".dynamicTrigger",
                    ".EmbeddedServiceBranding",
                    ".EmbeddedServiceConfig",
                    ".EmbeddedServiceFieldService",
                    ".EmbeddedServiceFlowConfig",
                    ".EmbeddedServiceLiveAgent",
                    ".entitlementProcess",
                    ".entitlementTemplate",
                    ".entityImplements",
                    ".escalationRules",
                    ".eventType",
                    ".externalDataConnector",
                    ".externalServiceRegistration",
                    ".featureParameterBoolean",
                    ".featureParameterDate",
                    ".featureParameterInteger",
                    ".feedFilter",
                    ".fieldServiceMobileExtension",
                    ".fieldSrcTrgtRelationship",
                    ".flexipage",
                    ".flow",
                    ".flowCategory",
                    ".flowDefinition",
                    ".form",
                    ".function",
                    ".gatewayProviderPaymentMethodType",
                    ".globalPicklist",
                    ".globalValueSet",
                    ".globalValueSetTranslation",
                    ".goal",
                    ".group",
                    ".homePageComponent",
                    ".homePageLayout",
                    ".icon",
                    ".iframeWhiteListUrlSettings",
                    ".inboundNetworkConnection",
                    ".insightType",
                    ".installedPackage",
                    ".keywords",
                    ".labels",
                    ".layout",
                    ".LeadConvertSetting",
                    ".letter",
                    ".licenseDefinition",
                    ".lightningBolt",
                    ".lightningExperienceTheme",
                    ".lightningOnboardingConfig",
                    ".liveChatAgentConfig",
                    ".liveChatButton",
                    ".liveChatDeployment",
                    ".liveChatSensitiveDataRule",
                    ".managedContentType",
                    ".managedTopics",
                    ".marketingResourceType",
                    ".matchingRule",
                    ".messageChannel",
                    ".milestoneType",
                    ".mktDataTranObject",
                    ".mlDomain",
                    ".MobileApplicationDetail",
                    ".mutingpermissionset",
                    ".myDomainDiscoverableLogin",
                    ".namedCredential",
                    ".navigationMenu",
                    ".network",
                    ".notifications",
                    ".notiftype",
                    ".oauthcustomscope",
                    ".object",
                    ".objectSourceTargetMap",
                    ".objectTranslation",
                    ".orchestrationContext",
                    ".outboundNetworkConnection",
                    ".participantRole",
                    ".pathAssistant",
                    ".paymentGatewayProvider",
                    ".permissionset",
                    ".permissionsetgroup",
                    ".platformEventChannel",
                    ".platformEventChannelMember",
                    ".platformEventSubscriberConfig",
                    ".policy",
                    ".portal",
                    ".postTemplate",
                    ".presenceDeclineReason",
                    ".presenceUserConfig",
                    ".profile",
                    ".profilePasswordPolicy",
                    ".profileSessionSetting",
                    ".prompt",
                    ".queue",
                    ".queueRoutingConfig",
                    ".quickAction",
                    ".recommendationStrategy",
                    ".redirectWhitelistUrl",
                    ".remoteSite",
                    ".report",
                    ".reportType",
                    ".role",
                    ".rule",
                    ".s3DataConnector",
                    ".salesAgreementSetting",
                    ".samlssoconfig",
                    ".serviceChannel",
                    ".servicePresenceStatus",
                    ".settings",
                    ".sharingRules",
                    ".sharingSet",
                    ".site",
                    ".skill",
                    ".snapshot",
                    ".standardValueSet",
                    ".standardValueSetTranslation",
                    ".subscription",
                    ".synonymDictionary",
                    ".tab",
                    ".territory",
                    ".territory2",
                    ".territory2Model",
                    ".territory2Rule",
                    ".territory2Type",
                    ".testSuite",
                    ".timeSheetTemplate",
                    ".topicsForObjects",
                    ".transactionSecurityPolicy",
                    ".translation",
                    ".type",
                    ".userCriteria",
                    ".visualizationPlugin",
                    ".wapp",
                    ".wds",
                    ".weblink",
                    ".webStoreTemplate",
                    ".workflow",
                    ".workSkillRouting",
                    ".xmd",
                    ".xorghub",
                    ".xml"
                ]
            }
        ]
    },
    "scripts": {
        "postinstall": "patch-package",
        "prepare:commands": "ts-node ./build/buildCommands.ts ./package.json ./commands.yaml",
        "prepare:sync": "ts-node ./build/syncPackages.ts",
        "build": "npm run build:workspaces && npm run prepare:commands && webpack --config webpack.prod.ts --env extension",
        "build:debug": "npm run build:workspaces && npm run prepare:commands && webpack --config webpack.dev.ts --env extension",
        "build:tests": "npm run build:workspaces && npm run prepare:commands && webpack --config webpack.dev.ts --env tests",
        "build:workspaces": " npm run prepare:sync && npm run build --workspaces --quite",
        "watch": "webpack --watch --config webpack.dev.ts --env extension --env tests",
        "watch:prod": "webpack --watch --config webpack.prod.ts --env extension",
        "clean": "rimraf ./out",
        "lint": "eslint ./src/**/*.ts ./packages/*/src/*.ts",
        "test": "npm run build:tests && node ./out/test/runTest.js",
        "docs": "typedoc",
        "bump": "ts-node ./build/bumpVersion.ts patch",
        "package": "vsce package",
        "publish": "vsce publish",
        "vscode:prepublish": "npm run clean && npm run build"
    },
    "devDependencies": {
        "@salesforce/core": "^2.28.2",
        "@types/chai": "^4.2.21",
        "@types/copy-webpack-plugin": "^8.0.1",
        "@types/fs-extra": "^9.0.12",
        "@types/js-yaml": "^4.0.2",
        "@types/jsforce": "^1.9.33",
        "@types/mocha": "^9.0.0",
        "@types/mock-fs": "^4.13.1",
        "@types/node": "^16.4.5",
        "@types/request": "^2.48.7",
        "@types/sinon": "^10.0.2",
        "@types/terser-webpack-plugin": "^5.0.4",
        "@types/uuid": "^8.3.1",
        "@types/vscode": "^1.61.0",
        "@types/webpack": "^5.28.0",
        "@types/webpack-env": "^1.16.2",
        "@types/webpack-merge": "^4.1.5",
        "@types/xml2js": "^0.4.9",
        "@typescript-eslint/eslint-plugin": "^4.28.5",
        "@typescript-eslint/eslint-plugin-tslint": "^4.28.5",
        "@typescript-eslint/parser": "^4.28.5",
        "angular-expressions": "^1.1.3",
        "axios": "^0.21.2",
        "chai": "^4.3.4",
        "chalk": "^4.1.1",
        "cli-ux": "^5.6.3",
        "copy-webpack-plugin": "^9.0.1",
        "eslint": "^7.31.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-import": "^2.24.1",
        "eslint-plugin-jsdoc": "^36.0.6",
        "eslint-plugin-prefer-arrow": "^1.2.3",
        "eslint-plugin-prettier": "^3.4.0",
        "gelex": "0.0.7",
        "glob": "^7.1.7",
        "globby": "^11.0.4",
        "js-yaml": "^4.1.0",
        "jsforce": "^1.10.1",
        "json-loader": "^0.5.7",
        "jszip": "^3.7.0",
        "log-symbols": "^4.0.0",
        "memfs": "^3.2.2",
        "mocha": "^9.0.3",
        "mocha-html-reporter": "0.0.1",
        "mocha-junit-reporter": "^2.0.0",
        "mocha-multi-reporters": "^1.5.1",
        "mocha-simple-html-reporter": "^2.0.0",
        "mocha-sonarqube-reporter": "^1.0.2",
        "mock-fs": "^5.0.0",
        "moment": "^2.29.1",
        "open": "^8.2.1",
        "patch-package": "^6.4.7",
        "reflect-metadata": "^0.1.13",
        "rimraf": "^3.0.2",
        "salesforce-alm": "^52.1.9",
        "sass.js": "^0.11.1",
        "sinon": "^11.1.2",
        "source-map-support": "^0.5.19",
        "terser": "^5.9.0",
        "terser-webpack-plugin": "^5.2.4",
        "transform-loader": "^0.2.4",
        "ts-loader": "^9.2.4",
        "ts-node": "^10.1.0",
        "tsconfig-paths-webpack-plugin": "^3.5.1",
        "tslint": "^5.20.1",
        "tslint-loader": "^3.5.4",
        "typedoc": "^0.21.5",
        "typescript": "^4.3.5",
        "unique-names-generator": "^4.6.0",
        "uuid": "^8.3.2",
        "vlocity": "^1.14.7",
        "vsce": "^1.100.2",
        "vscode-languageclient": "^7.0.0",
        "vscode-test": "^1.6.1",
        "webpack": "^5.62.1",
        "webpack-cli": "^4.7.2",
        "webpack-dev-server": "^3.11.2",
        "webpack-glob-entry": "^2.1.1",
        "webpack-merge": "^5.8.0",
        "webpack-node-externals": "^3.0.0",
        "xml2js": "^0.4.23"
    },
    "workspaces": [
        "packages/util",
        "packages/core"
    ]
}
