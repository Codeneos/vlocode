diff --git a/node_modules/typescript/lib/tsc.js b/node_modules/typescript/lib/tsc.js
index a72b108..c6a6393 100644
--- a/node_modules/typescript/lib/tsc.js
+++ b/node_modules/typescript/lib/tsc.js
@@ -73376,7 +73376,7 @@ var ts;
 })(ts || (ts = {}));
 var ts;
 (function (ts) {
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     function transformTypeScript(context) {
         var factory = context.factory, emitHelpers = context.getEmitHelperFactory, startLexicalEnvironment = context.startLexicalEnvironment, resumeLexicalEnvironment = context.resumeLexicalEnvironment, endLexicalEnvironment = context.endLexicalEnvironment, hoistVariableDeclaration = context.hoistVariableDeclaration;
         var resolver = context.getEmitResolver();
diff --git a/node_modules/typescript/lib/tsserver.js b/node_modules/typescript/lib/tsserver.js
index d97f9f4..9dbf970 100644
--- a/node_modules/typescript/lib/tsserver.js
+++ b/node_modules/typescript/lib/tsserver.js
@@ -87182,7 +87182,7 @@ var ts;
     /**
      * Indicates whether to emit type metadata in the new format.
      */
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     var TypeScriptSubstitutionFlags;
     (function (TypeScriptSubstitutionFlags) {
         /** Enables substitutions for decorated classes. */
diff --git a/node_modules/typescript/lib/tsserverlibrary.js b/node_modules/typescript/lib/tsserverlibrary.js
index 83772c4..706e788 100644
--- a/node_modules/typescript/lib/tsserverlibrary.js
+++ b/node_modules/typescript/lib/tsserverlibrary.js
@@ -87376,7 +87376,7 @@ var ts;
     /**
      * Indicates whether to emit type metadata in the new format.
      */
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     var TypeScriptSubstitutionFlags;
     (function (TypeScriptSubstitutionFlags) {
         /** Enables substitutions for decorated classes. */
diff --git a/node_modules/typescript/lib/typescript.js b/node_modules/typescript/lib/typescript.js
index 323de6f..cd69055 100644
--- a/node_modules/typescript/lib/typescript.js
+++ b/node_modules/typescript/lib/typescript.js
@@ -87376,7 +87376,7 @@ var ts;
     /**
      * Indicates whether to emit type metadata in the new format.
      */
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     var TypeScriptSubstitutionFlags;
     (function (TypeScriptSubstitutionFlags) {
         /** Enables substitutions for decorated classes. */
diff --git a/node_modules/typescript/lib/typescriptServices.js b/node_modules/typescript/lib/typescriptServices.js
index 3c67682..4f98c65 100644
--- a/node_modules/typescript/lib/typescriptServices.js
+++ b/node_modules/typescript/lib/typescriptServices.js
@@ -87376,7 +87376,7 @@ var ts;
     /**
      * Indicates whether to emit type metadata in the new format.
      */
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     var TypeScriptSubstitutionFlags;
     (function (TypeScriptSubstitutionFlags) {
         /** Enables substitutions for decorated classes. */
diff --git a/node_modules/typescript/lib/typingsInstaller.js b/node_modules/typescript/lib/typingsInstaller.js
index 9d20b51..61ea0af 100644
--- a/node_modules/typescript/lib/typingsInstaller.js
+++ b/node_modules/typescript/lib/typingsInstaller.js
@@ -87171,7 +87171,7 @@ var ts;
     /**
      * Indicates whether to emit type metadata in the new format.
      */
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     var TypeScriptSubstitutionFlags;
     (function (TypeScriptSubstitutionFlags) {
         /** Enables substitutions for decorated classes. */
