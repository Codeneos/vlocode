# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0

commands: 
  checkout_install:
    steps:
      - checkout
      - run: corepack install
      - restore_cache:
          keys: 
          - pnpm-store-{{ checksum "pnpm-lock.yaml" }}
      - run: pnpm config set store-dir ~/.pnpm-store
      - run:
          name: Install deps
          command: |
            sudo apt update
            sudo apt-get install -y libsecret-1-dev
      - run: pnpm install --frozen-lockfile
      - save_cache:
          key: pnpm-store-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store
  test:
    steps:
      - run: pnpm jest --ci --verbose -i
      - store_test_results:
          path: coverage/junit.xml
      - store_artifacts:
          path: coverage/sonar-report.xml
      - store_artifacts:
          path: coverage/lcov.info
  codequality:
    steps:
      - run: pnpm lint -o eslint-report.json --format json || true
      - sonarcloud/scan
  build:
    steps:
      - run: pnpm build

jobs:
  build-and-test:
    docker:
      - image: cimg/node:18.19-browsers
    steps:
      - checkout_install
      - build
      - test
      - codequality
  package:
    docker:
      - image: cimg/node:18.19-browsers
    steps:
      - checkout_install
      - run:
          name: "Pack extension"
          command: |
            echo $(node -p "require('./lerna.json').version") > .version
            [[ $VERSION =~ "-" ]] && export PRERELEASE="--pre-release"
            pnpm pack-extension $PRERELEASE
      - run: node -e "fs.writeFileSync('./release-notes.md', fs.readFileSync('./CHANGELOG.md').toString().match(/(##? \[(.*?))## \[/s)[1])"
      - persist_to_workspace:
          root: .
          paths: [ ".version", "release-notes.md", "packages/vscode-extension/*.vsix" ]
      - store_artifacts:
          path: packages/vscode-extension/*.vsix
      - store_artifacts:
          path: release-notes.md
      - store_artifacts:
          path: .version
  publish-vsc-extension:
    docker:
      - image: cimg/node:18.19-browsers
    steps:
      - checkout_install
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish extension on VSCode Marketplace"
          command: |
            VERSION=$(cat ./artifacts/.version)
            [[ $VERSION =~ "-" ]] && export PRERELEASE="--pre-release"
            pnpx vsce publish -p "$VSCE_TOKEN" $PRERELEASE --packagePath "./artifacts/packages/vscode-extension/vlocode-${VERSION}.vsix"
  publish-npm-packages:
    docker:
      - image: cimg/node:18.19-browsers
    steps:
      - checkout_install
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: pnpm run --filter @vlocode/* build
      - run: pnpm lerna publish from-package --force-publish --no-push --yes
  github-release:
    docker:
      - image: cibuilds/github:0.13
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(cat ./artifacts/.version)
            [[ ! $VERSION =~ "^[.0-9]+$" ]] && export PRERELEASE="--prerelease"
            NOTES=$(cat ./artifacts/release-notes.md)
            ghr $PRERELEASE -t ${GITHUB_TOKEN} -b "${NOTES}" -n "Version ${VERSION}" -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete v${VERSION} ./artifacts/packages/vscode-extension/vlocode-${VERSION}.vsix

workflows:
  validate:
    jobs:
      - build-and-test:
          context: sonarcloud
  release:
    jobs:
      - package:
          context: vsce
          filters: &filters-publish
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - github-release:
          context: github
          filters: *filters-publish
          requires:
            - package
      - publish-approval:
          type: approval
          filters: *filters-publish
          requires:
            - package
            - github-release
      - publish-vsc-extension:
          context: vsce
          filters: *filters-publish
          requires:
            - publish-approval
      - publish-npm-packages:
          context: npm
          filters: *filters-publish
          requires:
            - publish-approval
