diff --git a/node_modules/jsforce/lib/api/metadata.js b/node_modules/jsforce/lib/api/metadata.js
index ccf3c79..d2d75bc 100644
--- a/node_modules/jsforce/lib/api/metadata.js
+++ b/node_modules/jsforce/lib/api/metadata.js
@@ -561,6 +561,18 @@ Metadata.prototype.checkDeployStatus = function(id, includeDetails, callback) {
   }).thenCall(callback);
 };
 
+/**
+ * Cancel a deployment previously started by a call to deploy()
+ *
+ * @param {String} id - Async process id returned from deploy request
+ * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function
+ * @returns {Promise.<Metadata~AsyncResult>}
+ */
+Metadata.prototype.cancelDeploy = function(id, callback) {
+  var res = this._invoke("cancelDeploy", { asyncProcessId: id });
+  return new AsyncResultLocator(this, res).thenCall(callback);
+};
+
 
 /*--------------------------------------------*/
 
diff --git a/node_modules/jsforce/lib/connection.js b/node_modules/jsforce/lib/connection.js
index e833b5a..584640b 100644
--- a/node_modules/jsforce/lib/connection.js
+++ b/node_modules/jsforce/lib/connection.js
@@ -797,7 +797,7 @@ Connection.prototype._createParallel = function(type, records, options) {
         if (options.allOrNone || !err.errorCode) {
           throw err;
         }
-        return this._toRecordResult(null, err);
+        return self._toRecordResult(null, err);
       });
     })
   );
@@ -916,7 +916,7 @@ Connection.prototype._updateParallel = function(type, records, options) {
         if (options.allOrNone || !err.errorCode) {
           throw err;
         }
-        return this._toRecordResult(record.Id, err);
+        return self._toRecordResult(record.Id, err);
       });
     })
   );
@@ -1112,7 +1112,7 @@ Connection.prototype._destroyParallel = function(type, ids, options) {
         if (options.allOrNone || !err.errorCode) {
           throw err;
         }
-        return this._toRecordResult(id, err);
+        return self._toRecordResult(id, err);
       });
     })
   );
diff --git a/node_modules/jsforce/lib/http-api.js b/node_modules/jsforce/lib/http-api.js
index 607923b..df44faf 100644
--- a/node_modules/jsforce/lib/http-api.js
+++ b/node_modules/jsforce/lib/http-api.js
@@ -128,6 +128,7 @@ HttpApi.prototype.beforeSend = function(request) {
     }
     request.headers["Sforce-Call-Options"] = callOptions.join(', ');
   }
+  this._conn.emit('request', request);
 };
 
 /**
@@ -206,7 +207,7 @@ function parseText(str) { return str; }
  * @protected
  */
 HttpApi.prototype.isSessionExpired = function(response) {
-  return response.statusCode === 401;
+  return (response.statusCode === 403 && response.body == 'Bad_OAuth_Token') || response.statusCode === 401;
 };
 
 /**
